import { share as e, mergeMap as n, filter as r, takeUntil as t, make as o, merge as u } from "wonka";

import { execute as a } from "graphql/execution/execute.mjs";

import { getOperationName as i, makeResult as c, makeErrorResult as f, mergeResultPatch as v } from "@urql/core";

var l = "undefined" != typeof Symbol ? Symbol.asyncIterator : null;

function executeExchange(x) {
  var m = x.schema;
  var d = x.rootValue;
  var p = x.context;
  var y = x.fieldResolver;
  var h = x.typeResolver;
  return function(x) {
    var s = x.forward;
    return function(x) {
      var k = e(x);
      var q = n((function(e) {
        var n = e.key;
        var u = r((function(e) {
          return "teardown" === e.kind && e.key === n;
        }))(k);
        var x = "function" == typeof p ? p(e) : p;
        return t(u)(function makeExecuteSource(e, n) {
          return o((function(r) {
            var t = !1;
            Promise.resolve().then((function() {
              if (t) {
                return;
              }
              return a.apply(void 0, n);
            })).then((function(n) {
              if (t || !n) {
                return;
              } else if (!l || !n[l]) {
                r.next(c(e, n));
                return;
              }
              var o = n[l]();
              var u = null;
              return o.next().then((function next(n) {
                var a = n.done;
                var i = n.value;
                if (i) {
                  r.next(u = u ? v(u, i) : c(e, i));
                }
                if (!a && !t) {
                  return o.next().then(next);
                }
              }));
            })).then((function() {
              r.complete();
            })).catch((function(n) {
              r.next(f(e, n));
              r.complete();
            }));
            return function() {
              t = !0;
            };
          }));
        }(e, [ m, e.query, d, x, e.variables, i(e.query), y, h ]));
      }))(r((function(e) {
        return "query" === e.kind || "mutation" === e.kind;
      }))(k));
      var w = s(r((function(e) {
        return "teardown" === e.kind;
      }))(k));
      return u([ q, w ]);
    };
  };
}

export { executeExchange };
//# sourceMappingURL=urql-exchange-execute.mjs.map
