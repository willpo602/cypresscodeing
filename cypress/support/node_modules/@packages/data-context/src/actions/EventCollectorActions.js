"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventCollectorActions = void 0;
const tslib_1 = require("tslib");
const debug_1 = tslib_1.__importDefault(require("debug"));
const debug = (0, debug_1.default)('cypress:data-context:actions:EventCollectorActions');
const cloudEnv = (process.env.CYPRESS_INTERNAL_EVENT_COLLECTOR_ENV || 'staging');
class EventCollectorActions {
    constructor(ctx) {
        this.ctx = ctx;
        debug('Using %s environment for Event Collection', cloudEnv);
    }
    async recordEvent(event) {
        try {
            const dashboardUrl = this.ctx.cloud.getDashboardUrl(cloudEnv);
            await this.ctx.util.fetch(`${dashboardUrl}/anon-collect`, { method: 'POST', body: JSON.stringify(event) });
            debug(`Recorded event: %o`, event);
            return true;
        }
        catch (err) {
            debug(`Failed to record event %o due to error %o`, event, err);
            return false;
        }
    }
}
exports.EventCollectorActions = EventCollectorActions;
